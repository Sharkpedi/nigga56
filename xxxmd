local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Blue Lock: Rivals",
    SubTitle = "by sharkped",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.P
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent",
        Duration = 5 
    })

local desiredStyle = nil 
local isRolling = false

local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
    Title = "Select Styles",
    Values = {"None", "King", "Chigiri", "Bachira", "Shidou", "Nagi", "Isagi", "Gagamaru"},
    Multi = false,
    Default = 1,
    Callback = function(v)
        desiredStyle = v  
        isRolling = true  

        task.spawn(function()
            local player = game:GetService("Players").LocalPlayer
            while isRolling do
                task.wait(0.5)
                if player:FindFirstChild("PlayerStats") and player.PlayerStats:FindFirstChild("Style") then
                    local currentStyle = player.PlayerStats.Style.Value
                    if currentStyle ~= desiredStyle then
                        game:GetService("ReplicatedStorage").Packages.Knit.Services.StyleService.RE.Spin:FireServer()
                    else
                        isRolling = false  
                    end
                end
            end
        end)
    end
})


    local Slider = Tabs.Main:AddSlider("Slider", {
        Title = "Walkspeed",
        Default = 16,
        Min = 0,
        Max = 300,
        Rounding = 1,
        Callback = function(Value)
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
        end,
    })

    local Slider = Tabs.Main:AddSlider("Slider", {
        Title = "Ball size",
        Default = 0,
        Min = 0,
        Max = 300,
        Rounding = 1,
        Callback = function(Value)
            local football = workspace:FindFirstChild("Football") 
            if football then
                football.Size = Vector3.new(Value, Value, Value)
            end
        end,
    })
    
       Tabs.Main:AddButton({
        Title = "Infinite Yield Admin",
        Description = nil,
        Callback = function()
            loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
        end
    })

    Tabs.Main:AddToggle("Toggle", {
        Title = "Inf Stamina ",
        Default = true,
        Callback = function(Value)
            getgenv().infstamina = Value
            if getgenv().infstamina then
                local args = {
                    [1] = 0/0
                }
            
                game:GetService("ReplicatedStorage"):WaitForChild("Packages"):WaitForChild("Knit"):WaitForChild("Services"):WaitForChild("StaminaService"):WaitForChild("RE"):WaitForChild("DecreaseStamina"):FireServer(unpack(args))            
            end
        end
    })


    end
    
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

SaveManager:LoadAutoloadConfig()
